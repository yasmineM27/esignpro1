async function testProduction() {
  console.log('üåê TEST DE PRODUCTION');
  console.log('====================');
  
  const token = 'SECURE_1758976792815_d0kq0bd';
  const baseUrl = 'https://esignpro.ch';
  
  const urls = [
    `${baseUrl}/client-portal/${token}`,
    `${baseUrl}/secure-signature/${token}`,
    `${baseUrl}/api/client/finalize-case?token=${token}`
  ];
  
  for (const url of urls) {
    try {
      console.log(`\nüîç Test: ${url}`);
      const response = await fetch(url);
      const status = response.status;
      
      if (status === 200) {
        console.log(`‚úÖ Status: ${status} - OK`);
      } else if (status === 404) {
        console.log(`‚ùå Status: ${status} - PAGE NON TROUV√âE`);
        console.log('   ‚Üí Le d√©ploiement n\'est pas encore fait');
      } else {
        console.log(`‚ö†Ô∏è Status: ${status} - Autre erreur`);
      }
      
      // Pour l'API, essayons de lire la r√©ponse
      if (url.includes('/api/')) {
        try {
          const data = await response.json();
          console.log('   R√©ponse API:', data.success ? '‚úÖ Success' : '‚ùå Error');
        } catch (e) {
          console.log('   R√©ponse API: Non-JSON');
        }
      }
      
    } catch (error) {
      console.log(`‚ùå Erreur r√©seau: ${error.message}`);
    }
  }
  
  console.log('\nüìã R√âSUM√â:');
  console.log('- Si toutes les URLs retournent 404: Le d√©ploiement n\'est pas fait');
  console.log('- Si les URLs retournent 200: La production fonctionne !');
  console.log('- Si m√©lange: D√©ploiement partiel ou en cours');
  console.log('\nüöÄ SOLUTION: D√©ployez votre code vers la production !');
}

testProduction().catch(console.error);
