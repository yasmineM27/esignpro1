// Test pour corriger le probl√®me d'affichage de la signature
const fs = require('fs');

async function testSignatureImageFix() {
    console.log('üîß TEST: CORRECTION PROBL√àME SIGNATURE IMAGE\n');

    try {
        const { Document, Packer, Paragraph, TextRun, AlignmentType, ImageRun } = require('docx');

        console.log('üìã Diagnostic du probl√®me de signature...');
        console.log('‚ùå PROBL√àME ACTUEL: "Nous ne pouvons pas afficher l\'image"');
        console.log('‚ùå CAUSE PROBABLE: Format d\'image ou donn√©es base64 incorrectes');
        console.log('');

        // Cr√©er une vraie image PNG valide en base64 (pixel rouge 2x2)
        const validImageBase64 = 'iVBORw0KGgoAAAANSUhEUgAAAAIAAAACCAYAAABytg0kAAAAFklEQVQIHWP8//8/AzYwirkTmwNYNQAAZgABAPX8iL0AAAAASUVORK5CYII=';

        console.log('üîß SOLUTIONS TEST√âES:');
        console.log('1. ‚úÖ Suppression du texte de confirmation');
        console.log('2. üîÑ Test avec image PNG valide');
        console.log('3. üîÑ V√©rification du format base64');
        console.log('');

        // Donn√©es de test
        const data = {
            clientName: 'Jean Dupont',
            signatureData: validImageBase64 // Image PNG valide
        };

        const doc = new Document({
            sections: [
                {
                    properties: {
                        page: {
                            margin: {
                                top: 1440,
                                right: 1440,
                                bottom: 1440,
                                left: 1440,
                            },
                        },
                    },
                    children: [
                        // Titre
                        new Paragraph({
                            children: [
                                new TextRun({
                                    text: "TEST CORRECTION SIGNATURE",
                                    bold: true,
                                    size: 24,
                                }),
                            ],
                            alignment: AlignmentType.CENTER,
                            spacing: { after: 600 },
                        }),

                        // Client
                        new Paragraph({
                            children: [
                                new TextRun({
                                    text: `Client: ${data.clientName}`,
                                    size: 20,
                                }),
                            ],
                            spacing: { after: 400 },
                        }),

                        // Section signature
                        new Paragraph({
                            children: [
                                new TextRun({
                                    text: "Signature Client(e):",
                                    size: 20,
                                    bold: true,
                                }),
                            ],
                            spacing: { after: 200 },
                        }),

                        // SIGNATURE CORRIG√âE - Sans texte de confirmation
                        new Paragraph({
                            children: data.signatureData ? [
                                new ImageRun({
                                    data: Buffer.from(data.signatureData, 'base64'),
                                    transformation: {
                                        width: 200,
                                        height: 100,
                                    },
                                }),
                            ] : [
                                new TextRun({
                                    text: "‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶",
                                    size: 20,
                                }),
                            ],
                            spacing: { after: 100 },
                        }),

                        // PLUS DE TEXTE DE CONFIRMATION (supprim√©)

                        // Espacement final
                        new Paragraph({
                            children: [
                                new TextRun({
                                    text: "",
                                    size: 20,
                                }),
                            ],
                            spacing: { after: 400 },
                        }),
                    ],
                },
            ],
        });

        const buffer = await Packer.toBuffer(doc);
        fs.writeFileSync('test-signature-image-fix.docx', buffer);

        console.log('‚úÖ Document test cr√©√©: test-signature-image-fix.docx');
        console.log('- Taille:', buffer.length, 'bytes');
        console.log('- Signature: Image PNG valide');
        console.log('- Texte confirmation: SUPPRIM√â');

        console.log('\nüéâ CORRECTIONS APPLIQU√âES !');
        console.log('');
        console.log('üìã CHANGEMENTS:');
        console.log('1. ‚úÖ Texte de confirmation supprim√© dans OPSIO');
        console.log('2. ‚úÖ Texte de confirmation supprim√© dans r√©siliation');
        console.log('3. ‚úÖ Test avec image PNG valide');
        console.log('');
        console.log('üîç V√âRIFICATION:');
        console.log('1. Ouvrez test-signature-image-fix.docx dans Microsoft Word');
        console.log('2. V√©rifiez que la signature appara√Æt comme une IMAGE');
        console.log('3. V√©rifiez qu\'il n\'y a PLUS de texte "[Signature √©lectronique appliqu√©e...]"');
        console.log('4. Si l\'image n\'appara√Æt toujours pas, le probl√®me vient des donn√©es base64 r√©elles');
        console.log('');
        console.log('üéØ PROCHAINES √âTAPES:');
        console.log('1. Tester le document g√©n√©r√©');
        console.log('2. Si l\'image fonctionne, le probl√®me vient des vraies signatures en base64');
        console.log('3. V√©rifier le format des signatures stock√©es en base de donn√©es');
        console.log('4. S\'assurer que les signatures sont en PNG/JPEG valide');

    } catch (error) {
        console.error('\n‚ùå ERREUR:', error.message);
        console.error('Stack:', error.stack);
    }
}

testSignatureImageFix();